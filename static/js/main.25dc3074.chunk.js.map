{"version":3,"sources":["../../src/useMaskInput.ts","App.tsx","index.tsx"],"names":["props","mask","register","options","ref","React","Inputmask","maskInput","App","useMaskInput","type","ReactDOM","render","document","getElementById"],"mappings":"sZAWA,I,EAAqB,SAACA,G,IACZC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,SAAUC,EAAYH,EAAZG,QAElBC,EAAMC,iBAAZ,MAiBA,OAfAA,2BAAsB,WACfD,EAAL,SAEkBE,IAAU,EAAD,CACzBL,QADF,IAKAM,KAAeH,EAAfG,WACC,CAACN,EAAME,EATVE,IAWIH,GAAYE,EAAhB,SACEF,EAASE,EAATF,SAGF,GChBaM,EAXH,WAEV,IAAMJ,EAAMK,EAAa,CACvBR,KAAM,YAGR,OACE,2BAAOS,KAAK,OAAON,IAAKA,KCL5BO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.25dc3074.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport * as React from 'react';\nimport Inputmask from 'inputmask';\nimport type { Options } from 'inputmask';\n\ninterface UseInputMaskOptions {\n  mask: Options['mask']\n  register?(element: HTMLElement): void\n  options?: Options\n}\n\nconst useInputMask = (props: UseInputMaskOptions) => {\n  const { mask, register, options } = props;\n\n  const ref = React.useRef<HTMLInputElement>(null);\n\n  React.useLayoutEffect(() => {\n    if (!ref.current) return;\n\n    const maskInput = Inputmask({\n      mask,\n      ...options,\n    });\n\n    maskInput.mask(ref.current);\n  }, [mask, options, register]);\n\n  if (register && ref.current) {\n    register(ref.current);\n  }\n\n  return ref;\n};\n\nexport default useInputMask;\n","import React from 'react'\n\nimport useMaskInput from 'use-mask-input';\n\nconst App = () => {\n\n  const ref = useMaskInput({\n    mask: '999-999'\n  })\n\n  return (\n    <input type=\"text\" ref={ref} />\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}